package io.airlift.slice;
/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import com.facebook.presto.hll.impl.HLL;
import com.facebook.presto.hll.impl.RegisterSet;
import org.testng.Assert;
import org.testng.annotations.Test;

public class TestHashingEstimator
{
        int[] data3745 = new int[] { 73467012, 106040419, 138478628, 272666689, 135468163, 105024611, 70423650, 38832163, 37915713, 69245027, 102894785, 102997060, 34737219, 137695334, 36769830, 167906347, 71402693, 70392005, 71405702, 205620291, 43094083, 102828196, 69407779, 238163175, 70389825, 69374051, 136349830, 71439521, 102962307, 72386629, 40011874, 136385603, 102926533, 104990821, 102893668, 206667875, 37882915, 103843907, 108234816, 103913601, 337675429, 176358563, 70289538, 101749862, 175243397, 69405796, 37816449, 272733409, 104925222, 70322243, 35885188, 138477733, 102832288, 107056327, 73500898, 35750948, 106136706, 70256641, 36865092, 35721281, 168822881, 138545251, 70355011, 34703428, 35689538, 103844961, 136453186, 100764771, 139494497, 138582114, 103874596, 33655844,
                69276867, 106170469, 37847138, 168855558, 137434307, 36771938, 142939233, 35719202, 173179939, 105940037, 104928325, 70290530, 69309538, 136388710, 35719362, 137500708, 138479746, 37850311, 35755203, 138445923, 237012130, 36736069, 105058403, 174101539, 105943170, 68226145, 68260902, 69309601, 102960385, 108078273, 102864068, 101745828, 205689063, 69239906, 37783556, 137495681, 72419394, 72392770, 69306433, 102862979, 172100770, 205588643, 138512421, 169973829, 171053186, 171020324, 69274692, 173212705, 103909475, 35755105, 70290498, 69277763, 102861956, 136448165, 69341317, 102994982, 136382659, 68258917, 135368739, 175279170, 173246599, 109119589, 102832225, 103913507, 242486311, 68227171, 68229186, 76680259, 71376002, 70388900, 103025730, 107058273, 102796448,
                173051014, 103911488, 137495813, 101845155, 440568929, 102828134, 171018306, 109120610, 41027585, 68257857, 35822754, 170004580, 202376259, 2195489, 136414338, 176263330, 201361538, 68259906, 136350787, 102794370, 37818403, 169971812, 38863971, 106104900, 171117667, 69826 };

        int[] data3518 = new int[] { 36799616, 135370851, 135335107, 270568674, 69241985, 34769985, 105057507, 104925288, 173085730, 2393188, 136448033, 36767941, 41029732, 137465859, 72452101, 170952931, 104141954, 103844931, 35851361, 35755073, 103942216, 38864995, 107187234, 104929473, 170987746, 103813219, 1184835, 37882952, 137433282, 240165058, 36804705, 35720388, 139627586, 67178627, 71337092, 136415361, 104894529, 6291489, 72519812, 141596709, 137399300, 205689959, 168955042, 103877764, 71439552, 135467107, 104960036, 106039457, 102860867, 102928483, 169969762, 72386660, 104989761, 137435234, 104923264, 135366693, 238063746, 104923331, 103880808, 69241892, 137431043, 37980194, 104959041, 173313058, 137464930, 203496610, 102929509, 170989601, 36904003, 103877669, 2163905, 70453346,
                438339683, 169969764, 5310562, 270602309, 70420642, 274862178, 69244002, 171282594, 69308546, 37981315, 69340323, 103875588, 36013091, 100762818, 69342273, 138680453, 71434405, 203557955, 102892646, 102859813, 35791909, 8392803, 103942210, 137471041, 70357025, 103876738, 101812324, 73499684, 38897698, 172133475, 73471105, 206637186, 170930306, 35719236, 38866981, 168888354, 70325283, 37782563, 39030821, 68260995, 168959076, 35749952, 69340385, 169018499, 100732100, 208799813, 70355045, 39980130, 170035361, 71402563, 176263266, 70422658, 102827076, 69337122, 103973894, 3279041, 2199587, 35687618, 69346406, 3247235, 108138657, 104925345, 101845155, 69311522, 102830181, 38863972, 168822916, 103842945, 138512482, 136513637, 70389825, 101879842, 102926436, 37985444, 106959016,
                206735489, 69502086, 138446951, 102894786, 69307461, 2166853, 303144096, 3343684, 70290565, 101779650, 110167138, 102828229, 39913505, 35785794, 135303361, 38963394, 102894729, 104962178, 69273667, 238095459, 104928386, 104074305, 68325507, 4164 };

    @Test
    public void testSapoHLLEstimatorResults() throws Exception
    {
        int bitSize = 10;

        HLL v1 = new HLL(bitSize, new RegisterSet((int) Math.pow(2, bitSize), data3745));
        Assert.assertEquals(v1.cardinality(), 3745L);

        HLL hll = new HLL(bitSize, new RegisterSet((int) Math.pow(2, bitSize), data3518));
        Assert.assertEquals(hll.cardinality(), 3518L);

        HLL merged = new HLL(bitSize, new RegisterSet((int) Math.pow(2, bitSize), data3745));
        merged = (HLL) merged.merge(hll);

        Assert.assertEquals(merged.cardinality(), 7259L);
    }

    @Test
    public void testFromToBytes()
    {
        int bitSize = 10;
        HLL v1 = new HLL(bitSize, new RegisterSet((int) Math.pow(2, bitSize), data3745));
        byte[] bytes = v1.getBytes();

        HLL hll = HLL.fromBytes(bytes);
        Assert.assertEquals(v1.cardinality(), hll.cardinality());
    }
}
